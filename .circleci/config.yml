version: 2.1
jobs:
  test:
    working_directory: ~/bbq_site_matching
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.5.3-node-browsers
        environment:
          BUNDLER_VERSION: 1.17.3
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          DB_USERNAME: root
          DB_PASSWORD: password
      - image: circleci/mysql:5.7
        environment:
          MYSQL_DATABASE: ci_test
          MYSQL_USER: root
          MYSQL_ROOT_PASSWORD: password
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache: &restore_cache
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            gem install bundler -v 1.17.3
            bundle install --jobs=4 --retry=3 --path vendor/bundle
            sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
            sudo wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo apt update
            sudo apt-get install google-chrome-stable
      - save_cache: &save_cache
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run: mv config/database.yml.ci config/database.yml
      # Database setup
      - run: bundle exec rails db:create
      - run: bundle exec rails db:schema:load
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"
            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES
          no_output_timeout: 3m
      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  rubocop:
    working_directory: ~/bbq_site_matching
    docker:
      - image: circleci/ruby:2.5.3-node-browsers
    steps:
      - checkout
      - restore_cache:
          <<: *restore_cache
      - run: &bundle_install
          name: install dependencies
          command: |
            gem install bundler -v 1.17.3
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          <<: *save_cache
      - run:
          name: Rubocop
          command: bundle exec rubocop

  deploy:
    working_directory: ~/bbq_site_matching
    docker:
      - image: circleci/ruby:2.5.3-node-browsers
    steps:
      - checkout
      - restore_cache:
          <<: *restore_cache
      - run:
          <<: *bundle_install
      - save_cache:
          <<: *save_cache
      - run:
          name: install awscli
          command: |
            sudo apt-get -y -qq update
            sudo apt-get -y -qq install python3.5-dev
            curl -O https://bootstrap.pypa.io/get-pip.py
            sudo python3.5 get-pip.py
            sudo pip install awscli
      - run:
          name: authorize security-group inbound
          command: |
            IP=`curl ifconfig.me`
            aws ec2 authorize-security-group-ingress \
              --group-id sg-056741eabece28fd5 --protocol tcp --port 22 --cidr ${IP}/32
      - add_ssh_keys:
          fingerprints:
            - '2e:00:2b:a0:e0:ad:2a:49:e6:d1:01:c8:c5:0d:64:16'
      - deploy:
          name: Capistrano deploy
          command: bundle exec cap production deploy
          command: |
            IP=`curl ifconfig.me`
            aws ec2 revoke-security-group-ingress \
              --group-id sg-056741eabece28fd5 --protocol tcp --port 22 --cidr ${IP}/32

workflows:
  version: 2.1
  build:
    jobs:
      - test
      - rubocop
      - deploy:
          requires:
            - test
            - rubocop
          # filters:
          #   branches:
          #     only: master
